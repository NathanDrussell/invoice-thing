// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum Status {
    deleted
    draft
    sent
    paid
    canceled
}

model Service {
    id          String  @id @default(cuid())
    name        String
    description String  @default("")
    price       Int
    invoiceId   String?

    orgId    String
    parentId String?
    parent   Service?      @relation(name: "childServices", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    children Service[]     @relation(name: "childServices")
    invoices InvoiceItem[]

    @@index([invoiceId], name: "invoiceId")
    @@index([parentId], name: "parentId")
    @@index([orgId], name: "orgId")
    @@map("Services")
}

model Invoice {
    id        String              @id @default(cuid())
    status    Status              @default(draft)
    orgId     String
    total     Int
    dueDate   DateTime
    customers CustomersInvoices[]
    items     InvoiceItem[]

    @@index([orgId], name: "orgId")
    @@index([status], name: "status")
    @@index([dueDate], name: "dueDate")
    @@index([id, status], name: "id_status")
}

model InvoiceItem {
    serviceId String
    service   Service @relation(fields: [serviceId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    invoiceId String
    invoice   Invoice @relation(fields: [invoiceId], references: [id], onDelete: NoAction, onUpdate: NoAction)

    @@id([serviceId, invoiceId])
    @@index([serviceId], name: "serviceId")
    @@index([invoiceId], name: "invoiceId")
}

model Customer {
    id            String              @id @default(cuid())
    orgId         String
    name          String
    email         String
    emailVerified Boolean             @default(false)
    phone         String              @default("")
    address       String              @default("")
    city          String              @default("")
    state         String              @default("")
    zip           String              @default("")
    country       String              @default("")
    createdAt     DateTime            @default(now())
    updatedAt     DateTime            @updatedAt
    invoices      CustomersInvoices[]

    @@index([orgId], name: "orgId")
}

model CustomersInvoices {
    customerId String
    customer   Customer? @relation(fields: [customerId], references: [id])
    invoiceId  String
    invoice    Invoice?  @relation(fields: [invoiceId], references: [id])

    @@id([customerId, invoiceId])
    @@index([customerId], name: "customerId")
    @@index([invoiceId], name: "invoiceId")
}
